%% Author: Igor compiler
%% Compiler version: igorc 2.0.0
%% DO NOT EDIT THIS FILE - it is machine generated

-record(json, {
}).

-record(cdb_database_info, {
    db_name :: binary(),
    doc_count :: igor_types:int(),
    doc_del_count :: igor_types:int(),
    update_seq :: ecouch_cdb:json(),
    purge_seq :: ecouch_cdb:json(),
    compact_running :: boolean(),
    disk_size :: igor_types:int(),
    data_size :: igor_types:int(),
    instance_start_time :: binary(),
    disk_format_version :: igor_types:int()
}).

-record(cdb_change_leaf, {
    rev :: binary()
}).

-record(cdb_change, {
    id :: binary(),
    seq :: ecouch_cdb:json(),
    changes :: [ecouch_cdb:cdb_change_leaf()],
    deleted = false :: boolean(),
    doc :: ecouch_cdb:json() | 'undefined'
}).

-record(cdb_changes, {
    last_seq :: ecouch_cdb:json(),
    results :: [ecouch_cdb:cdb_change()]
}).

-record(cdb_doc_row_value, {
    rev :: binary()
}).

-record(cdb_doc_row, {
    id :: binary(),
    key :: binary(),
    value :: ecouch_cdb:cdb_doc_row_value(),
    doc :: ecouch_cdb:json() | 'undefined'
}).

-record(cdb_all_docs, {
    total_rows :: igor_types:int(),
    offset :: igor_types:int(),
    rows :: [ecouch_cdb:cdb_doc_row()]
}).

-record(cdb_document_operation_response, {
    id :: binary(),
    ok :: boolean(),
    rev :: binary()
}).

-record(cdb_attachment, {
    content_type :: binary() | 'undefined',
    data :: binary() | 'undefined',
    digest :: binary() | 'undefined',
    encoded_length :: igor_types:int() | 'undefined',
    encoding :: binary() | 'undefined',
    length :: igor_types:int() | 'undefined',
    revpos :: igor_types:int() | 'undefined',
    stub :: boolean() | 'undefined',
    follows :: boolean() | 'undefined'
}).

-record(cdb_document_revisions, {
    ids :: [binary()],
    start :: igor_types:int()
}).

-record(cdb_revision_info, {
    rev :: binary(),
    status :: ecouch_cdb:cdb_revision_status()
}).

-record(cdb_document_info, {
    id :: binary(),
    rev :: binary(),
    deleted :: boolean() | 'undefined',
    attachments :: igor_types:dict(binary(), ecouch_cdb:cdb_attachment()) | 'undefined',
    conflicts :: ecouch_cdb:json() | 'undefined',
    deleted_conflicts :: ecouch_cdb:json() | 'undefined',
    local_seq :: igor_types:int() | 'undefined',
    revs_info :: [ecouch_cdb:cdb_revision_info()] | 'undefined',
    revisions :: ecouch_cdb:cdb_document_revisions() | 'undefined'
}).

-record(cdb_view_spec, {
    map :: binary(),
    reduce :: binary() | 'undefined'
}).

-record(cdb_view_result_row, {
    id :: binary(),
    key :: ecouch_cdb:json(),
    value :: ecouch_cdb:json()
}).

-record(cdb_view_result, {
    offset :: igor_types:int(),
    rows :: [ecouch_cdb:cdb_view_result_row()],
    total_rows :: igor_types:int(),
    update_seq :: igor_types:int() | 'undefined'
}).

-record(cdb_replication_request, {
    cancel :: boolean() | 'undefined',
    continuous :: boolean() | 'undefined',
    create_target :: boolean() | 'undefined',
    doc_ids :: [binary()] | 'undefined',
    proxy :: binary() | 'undefined',
    source :: binary(),
    target :: binary()
}).

-record(cdb_replication_result, {
    history :: [ecouch_cdb:cdb_replication_history()],
    ok :: boolean(),
    replication_id_version :: igor_types:int(),
    session_id :: binary(),
    source_last_seq :: igor_types:int()
}).

-record(cdb_replication_history, {
    doc_write_failures :: igor_types:int(),
    docs_read :: igor_types:int(),
    docs_written :: igor_types:int(),
    end_last_seq :: igor_types:int(),
    end_time :: binary(),
    missing_checked :: igor_types:int(),
    missing_found :: igor_types:int(),
    recorded_seq :: igor_types:int(),
    session_id :: binary(),
    start_last_seq :: igor_types:int(),
    start_time :: binary()
}).

